{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\corde\\\\Desktop\\\\SUTD\\\\react\\\\hotelbookingsystem\\\\bookingsys\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { ChakraProvider } from '@chakra-ui/react';\nimport { createBrowserRouter, RouterProvider } from \"react-router-dom\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n    children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 3\n}, this));\nimport BlogsListPage from './pages/BlogsListPage';\nimport BlogPage from './pages/BlogPage';\nimport AuthorPage from './pages/AuthorPage';\nimport EmptyPage from './pages/Empty';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst router = createBrowserRouter([{\n  path: \"/\",\n  element: /*#__PURE__*/_jsxDEV(BlogsListPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 12\n  }, this)\n}, {\n  path: \"/blog\",\n  element: /*#__PURE__*/_jsxDEV(BlogPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 12\n  }, this)\n}, {\n  path: \"/empty\",\n  element: /*#__PURE__*/_jsxDEV(EmptyPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 12\n  }, this)\n}, {\n  path: \"/author\",\n  element: /*#__PURE__*/_jsxDEV(AuthorPage, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 12\n  }, this)\n}]);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","ChakraProvider","createBrowserRouter","RouterProvider","root","createRoot","document","getElementById","render","_jsxDEV","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber","BlogsListPage","BlogPage","AuthorPage","EmptyPage","jsxDEV","router","path","element"],"sources":["C:/Users/corde/Desktop/SUTD/react/hotelbookingsystem/bookingsys/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { ChakraProvider } from '@chakra-ui/react'\r\nimport {\r\n  createBrowserRouter,\r\n  RouterProvider,\r\n } from \"react-router-dom\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <ChakraProvider>\r\n      <App />\r\n    </ChakraProvider>\r\n  </React.StrictMode>\r\n);\r\n\r\nimport BlogsListPage from './pages/BlogsListPage';\r\nimport BlogPage from './pages/BlogPage';\r\nimport AuthorPage from './pages/AuthorPage';\r\nimport EmptyPage from './pages/Empty';\r\n\r\nconst router = createBrowserRouter([\r\n {\r\n  path: \"/\",\r\n  element: <BlogsListPage />\r\n },\r\n\r\n {\r\n  path: \"/blog\",\r\n  element: <BlogPage />,\r\n },\r\n\r\n {\r\n  path: \"/empty\",\r\n  element: <EmptyPage />,\r\n },\r\n\r\n {\r\n  path: \"/author\",\r\n  element: <AuthorPage />,\r\n }\r\n  \r\n]);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,SAASC,cAAc,QAAQ,kBAAkB;AACjD,SACEC,mBAAmB,EACnBC,cAAc,QACR,kBAAkB;AAE1B,MAAMC,IAAI,GAAGN,QAAQ,CAACO,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTC,OAAA,CAACZ,KAAK,CAACa,UAAU;EAAAC,QAAA,eACfF,OAAA,CAACR,cAAc;IAAAU,QAAA,eACbF,OAAA,CAACV,GAAG;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACO;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACD,CACpB,CAAC;AAED,OAAOC,aAAa,MAAM,uBAAuB;AACjD,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,OAAOC,SAAS,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAX,OAAA;AAEtC,MAAMY,MAAM,GAAGnB,mBAAmB,CAAC,CAClC;EACCoB,IAAI,EAAE,GAAG;EACTC,OAAO,eAAEd,OAAA,CAACO,aAAa;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAC1B,CAAC,EAED;EACCO,IAAI,EAAE,OAAO;EACbC,OAAO,eAAEd,OAAA,CAACQ,QAAQ;IAAAL,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACrB,CAAC,EAED;EACCO,IAAI,EAAE,QAAQ;EACdC,OAAO,eAAEd,OAAA,CAACU,SAAS;IAAAP,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACtB,CAAC,EAED;EACCO,IAAI,EAAE,SAAS;EACfC,OAAO,eAAEd,OAAA,CAACS,UAAU;IAAAN,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AACvB,CAAC,CAED,CAAC;;AAEF;AACA;AACA;AACAf,eAAe,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}