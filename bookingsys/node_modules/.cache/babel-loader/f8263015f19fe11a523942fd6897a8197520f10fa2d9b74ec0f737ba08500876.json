{"ast":null,"code":"import { StackItem } from \"./chunk-AMDSPU3E.mjs\";\nimport { getDividerStyles } from \"./chunk-CCJ3WTOJ.mjs\";\n\n// src/stack/stack.tsx\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport { chakra, forwardRef } from \"@chakra-ui/system\";\nimport { cloneElement, Fragment, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Stack = forwardRef((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  const dividerStyle = useMemo(() => getDividerStyles({\n    spacing,\n    direction\n  }), [spacing, direction]);\n  const hasDivider = !!divider;\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children);\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const isLast = index + 1 === validChildren.length;\n      const wrappedChild = /* @__PURE__ */jsx(StackItem, {\n        children: child\n      }, key);\n      const _child = shouldWrapChildren ? wrappedChild : child;\n      if (!hasDivider) return _child;\n      const clonedDivider = cloneElement(divider, {\n        __css: dividerStyle\n      });\n      const _divider = isLast ? null : clonedDivider;\n      return /* @__PURE__ */jsxs(Fragment, {\n        children: [_child, _divider]\n      }, key);\n    });\n  }, [divider, dividerStyle, hasDivider, shouldUseChildren, shouldWrapChildren, children]);\n  const _className = cx(\"chakra-stack\", className);\n  return /* @__PURE__ */jsx(chakra.div, {\n    ref,\n    display: \"flex\",\n    alignItems: align,\n    justifyContent: justify,\n    flexDirection: direction,\n    flexWrap: wrap,\n    gap: hasDivider ? void 0 : spacing,\n    className: _className,\n    ...rest,\n    children: clones\n  });\n});\nStack.displayName = \"Stack\";\nexport { Stack };","map":{"version":3,"names":["StackItem","getDividerStyles","getValidChildren","cx","chakra","forwardRef","cloneElement","Fragment","useMemo","jsx","jsxs","Stack","props","ref","isInline","direction","directionProp","align","justify","spacing","wrap","children","divider","className","shouldWrapChildren","rest","dividerStyle","hasDivider","shouldUseChildren","clones","validChildren","map","child","index","key","isLast","length","wrappedChild","_child","clonedDivider","__css","_divider","_className","div","display","alignItems","justifyContent","flexDirection","flexWrap","gap","displayName"],"sources":["C:/Users/corde/Desktop/SUTD/react/hotelbookingsystem/bookingsys/node_modules/@chakra-ui/layout/dist/chunk-WKZT7ZXJ.mjs"],"sourcesContent":["import {\n  StackItem\n} from \"./chunk-AMDSPU3E.mjs\";\nimport {\n  getDividerStyles\n} from \"./chunk-CCJ3WTOJ.mjs\";\n\n// src/stack/stack.tsx\nimport { getValidChildren } from \"@chakra-ui/react-children-utils\";\nimport { cx } from \"@chakra-ui/shared-utils\";\nimport {\n  chakra,\n  forwardRef\n} from \"@chakra-ui/system\";\nimport { cloneElement, Fragment, useMemo } from \"react\";\nimport { jsx, jsxs } from \"react/jsx-runtime\";\nvar Stack = forwardRef((props, ref) => {\n  const {\n    isInline,\n    direction: directionProp,\n    align,\n    justify,\n    spacing = \"0.5rem\",\n    wrap,\n    children,\n    divider,\n    className,\n    shouldWrapChildren,\n    ...rest\n  } = props;\n  const direction = isInline ? \"row\" : directionProp != null ? directionProp : \"column\";\n  const dividerStyle = useMemo(\n    () => getDividerStyles({ spacing, direction }),\n    [spacing, direction]\n  );\n  const hasDivider = !!divider;\n  const shouldUseChildren = !shouldWrapChildren && !hasDivider;\n  const clones = useMemo(() => {\n    const validChildren = getValidChildren(children);\n    return shouldUseChildren ? validChildren : validChildren.map((child, index) => {\n      const key = typeof child.key !== \"undefined\" ? child.key : index;\n      const isLast = index + 1 === validChildren.length;\n      const wrappedChild = /* @__PURE__ */ jsx(StackItem, { children: child }, key);\n      const _child = shouldWrapChildren ? wrappedChild : child;\n      if (!hasDivider)\n        return _child;\n      const clonedDivider = cloneElement(\n        divider,\n        {\n          __css: dividerStyle\n        }\n      );\n      const _divider = isLast ? null : clonedDivider;\n      return /* @__PURE__ */ jsxs(Fragment, { children: [\n        _child,\n        _divider\n      ] }, key);\n    });\n  }, [\n    divider,\n    dividerStyle,\n    hasDivider,\n    shouldUseChildren,\n    shouldWrapChildren,\n    children\n  ]);\n  const _className = cx(\"chakra-stack\", className);\n  return /* @__PURE__ */ jsx(\n    chakra.div,\n    {\n      ref,\n      display: \"flex\",\n      alignItems: align,\n      justifyContent: justify,\n      flexDirection: direction,\n      flexWrap: wrap,\n      gap: hasDivider ? void 0 : spacing,\n      className: _className,\n      ...rest,\n      children: clones\n    }\n  );\n});\nStack.displayName = \"Stack\";\n\nexport {\n  Stack\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}